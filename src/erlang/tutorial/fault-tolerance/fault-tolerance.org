#+TITLE: 容错编程
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/main.css" />
#+HTML_LINK_UP: ../concurrency/concurrency.html   
#+HTML_LINK_HOME: ../tutorial.html
#+OPTIONS: num:nil timestamp:nil

#+begin_example
  上一节中的完整示例还存在一些问题：

  当用户所登录的结点崩溃时，用户没有从系统中登出，因此该用户仍然在服务器的 User_List 中，但事实是用户已经不在系统中了。这会导致这用户不能再次登录，因为系统认为它已经在系统中了

  或者如果服务器发送消息出现故障了，那么这时候会导致客户端在 await_result 函数中一直等待，那又该怎么处理这个问题呢？
#+end_example
+ [[file:timeout.org][超时处理]]
+ [[file:error-handle.org][错误处理]]
+ [[file:example.org][完整实例]]
