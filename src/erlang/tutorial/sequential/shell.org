#+TITLE: Erlang Shell
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/main.css" />
#+HTML_LINK_UP: sequential.html   
#+HTML_LINK_HOME: sequential.html
#+OPTIONS: num:nil timestamp:nil

#+BEGIN_EXAMPLE
  绝大多数操作系统都有命令解释器或者 shell，Unix 与 Linux 系统中有很多不同的 shell， windows 系统上也有命令行提示

  Erlang 自己的 shell 中可以直接编写 Erlang 代码，并被执行输出执行后的效果（可以参考 STDLIB 中 shell 手册)
#+END_EXAMPLE

在 Linux 或 Unix 操作系统中先启动一个 shell 或者命令解释器，再输入 erl 命令即可启动 erlang 的 shell。启动 Erlang 的 shell 之后，可以看到如下的输出效果:

#+BEGIN_SRC sh 
  % erl
  Erlang R15B (erts-5.9.1) [source] [smp:8:8] [rq:8] [async-threads:0] [hipe] [kernel-poll:false]

  Eshell V5.9.1  (abort with ^G)
  1>
#+END_SRC
在 shell 中输入 _2+5._ 后，再输入回车符

#+BEGIN_SRC sh 
  1> 2 + 5.
  7
  2>
#+END_SRC

#+BEGIN_EXAMPLE
  注意：输入字符 "." 与回车符的目的是告诉 shell 已经完成代码输入
#+END_EXAMPLE

下面是一个更加复杂的计算：

#+BEGIN_SRC sh 
  2> (42 + 77) * 66 / 3.
  2618.0
#+END_SRC

#+BEGIN_EXAMPLE
  其中括号的使用，乘法操作符 “*” 与除法操作符 “/” 与一般算术运算中的含义与用法完全相同
#+END_EXAMPLE

输入 Ctrl 与 C 键可以停止 Erlang 系统与交互式命令行（shell）。下面给出输入 Ctrl-C 后的输出结果：

#+BEGIN_SRC sh 
  BREAK: (a)bort (c)ontinue (p)roc info (i)nfo (l)oaded
	 (v)ersion (k)ill (D)b-tables (d)istribution
  a
  %
#+END_SRC

#+BEGIN_EXAMPLE
输入 “a” 可以结束 Erlang 系统
#+END_EXAMPLE

关闭 Erlang 系统的另一种途径则是通过输入 _halt()_ :

#+BEGIN_SRC sh 
  3> halt().
  %
#+END_SRC

[[file:module_function.org][Next：模块和函数]]

[[file:sequential.org][Home：顺序编程]]
