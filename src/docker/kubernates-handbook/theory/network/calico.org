#+TITLE: Calico 插件
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../../css/main.css" />
#+HTML_LINK_UP: flannel.html   
#+HTML_LINK_HOME: network.html
#+OPTIONS: num:nil timestamp:nil ^:nil

#+BEGIN_EXAMPLE
  Calico 原意为”有斑点的“，如果说一只猫为 calico cat 的话，就是说这是只花猫，也叫三色猫，所以 calico 的 logo 是只三色猫
#+END_EXAMPLE

#+ATTR_HTML: image :width 20% 
[[file:../../pic/006tNc79gy1fz65bt7ieej30c90bsgn2.jpg]]

* 概念
  Calico创建和管理一个 _扁平的三层_ 网络（不需要overlay），每个容器会分配一个 *可路由的IP* 
  #+BEGIN_EXAMPLE
  由于通信时不需要解包和封包，网络性能损耗小，易于排查，且易于水平扩展
  #+END_EXAMPLE

  小规模部署时可以通过 _BGP client_ 直接互联，大规模下可通过指定的 _BGP Route Reflector_ 来完成

  #+BEGIN_EXAMPLE
  这样保证所有的数据流量都是通过IP路由的方式完成互联的
  #+END_EXAMPLE

  Calico基于 _iptables_ 还提供了丰富而灵活的网络Policy，保证通过 *各个节点上的ACL* 来提供 _Workload的多租户隔离_ 、 _安全组_ 以及其他 _可达性限制_ 等功能 

* 架构
  #+ATTR_HTML: image :width 50% 
  [[file:../../pic/calico.png]] 

  Calico主要由下面几个组件组成：
  + Etcd：负责存储网络信息
  + BGP client：负责将Felix配置的 _路由信息_ *分发* 到其他节点
  + Felix：Calico Agent，每个节点都需要运行，主要负责 _配置路由_ 、 _配置ACLs_ 、 _报告状态_
  + BGP Route Reflector：大规模部署时需要用到，作为 *BGP client的中心连接点* ，可以避免每个节点互联 

* 部署
  运行下面的命令可以部署 calico 网络：

  #+BEGIN_SRC sh 
  mkdir /etc/cni/net.d/

  kubectl apply -f https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/rbac.yaml

  wget https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/hosted/calico.yaml

  # 修改etcd_endpoints的值和默认的192.168.0.0/16(不能和已有网段冲突)

  kubectl apply -f calico.yaml

  wget  https://github.com/projectcalico/calicoctl/releases/download/v2.0.0/calicoctl

  mv calicoctl /usr/loca/bin && chmod +x /usr/local/bin/calicoctl

  export CALICO_DATASTORE_TYPE=kubernetes

  export CALICO_KUBECONFIG=~/.kube/config 

  calicoctl get ippool

  calicoctl get node
  #+END_SRC

  #+BEGIN_EXAMPLE
    如果安装时启用应用层策略的话还需要安装 istio
  #+END_EXAMPLE

  [[file:cilium.org][Next：cilium]]

  [[file:flannel.org][Previous: flannel]]

  [[file:network.org][Home：网络]]
  
