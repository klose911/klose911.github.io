#+TITLE: 字符串
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/main.css" />
#+HTML_LINK_UP: ./object.html
#+HTML_LINK_HOME: ./data_type.html
#+OPTIONS: num:nil timestamp:nil ^:nil

REDIS_STRING _字符串_ 是 Redis 使用得最为广泛的数据类型， 它除了是  _SET_ , _GET_ 等命令的操作对象之外， 数据库中的所有 _键_ ， 以及执行命令时提供给 Redis 的 _参数_ ， 都是用这种类型保存的
* 编码
字符串类型分别使用 _REDIS_ENCODING_INT_ 和 _REDIS_ENCODING_RAW_ 两种编码：
+ REDIS_ENCODING_INT 使用 *long* 类型来保存 _long_ 类型值
+ REDIS_ENCODING_RAW 则使用 *sdshdr* 结构来保存 _sds_ （也即是 _char*_ ) , _long long_  ,  _double_ 和 _long double_ 类型值

#+begin_example
  换句话来说， 在 Redis 中， 只有能表示为 long 类型的值， 才会以整数的形式保存

  其他类型的整数、小数和字符串， 都是用 sdshdr 结构来保存
#+end_example

#+ATTR_HTML: image :width 90% 
[[file:../pic/graphviz-bb7ecaf3be8e729365b5a9241cdcb04aa5a709d1.svg]]
** 编码的选择
新 *创建* 的字符串默认使用 _REDIS_ENCODING_RAW_ 编码， 在将字符串作为键或者值 *保存* 进数据库时， 程序会尝试将字符串转为 _REDIS_ENCODING_INT_ 编码
* 字符串命令的实现
Redis 的字符串类型命令， 基本上是通过 *包装*  _sds 数据结构_ 的操作函数来实现的， 没有什么需要说明的地方

  #+ATTR_HTML: :border 1 :rules all :frame boader
| [[file:hash.org][Next：哈希表]] | [[file:object.org][Previous：对象处理机制]] | [[file:data_type.org][Home：数据类型]] |
