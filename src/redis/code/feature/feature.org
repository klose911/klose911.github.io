#+TITLE: 功能实现
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/main.css" />
#+HTML_LINK_UP: ../data_type/data_type.html
#+HTML_LINK_HOME: ../code.html
#+OPTIONS: num:nil timestamp:nil ^:nil
除了针对单个键值对的操作外， Redis 还提供了一些同时对 *多个键值* 对进行处理的功能， 比如 _事务_ 和 _Lua 脚本_ 。另外， 一些辅助性的功能， 比如 _慢查询_ ， 以及一些和数据库无关的功能， 比如 _订阅与发布_ ， 也会经常用到

#+begin_example
通过理解这些功能的底层实现， 可以更有效地使用它们
#+end_example
这一部分将对这些功能进行介绍：
+ [[file:transaction.org][事务]]
+ [[file:pubsub.org][订阅与发布]]
+ [[file:slowlog.org][慢查询日志]]

    #+ATTR_HTML: :border 1 :rules all :frame boader
    | [[file:../internal/internal.org][Next：内部机制]] | [[file:../data_type/data_type.org][Previous： 数据类型]] | [[file:../code.org][Home: Redis 设计与实现]] |
