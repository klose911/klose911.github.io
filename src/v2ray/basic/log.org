#+TITLE: 日志
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/main.css" />
#+HTML_LINK_HOME: basic.html
#+HTML_LINK_UP: dns.html
#+OPTIONS: num:nil timestamp:nil ^:nil

对于软件开发者来说使用查看日志是一种非常有效的调试手段。普通用户使用日志可以知道软件的运行状况，并且当软件出现异常时提供日志给开发者可以令开发者更加容易找到问题的根源，加快修复问题

* 配置
** 客户端
#+begin_src js 
  {
      "log": {
	  "loglevel": "warning", // 日志级别
	  "access": "D:\\v2ray\\access.log",  // 这是 Windows 系统的路径
	  "error": "D:\\v2ray\\error.log"
      },
      "inbounds": [
	  {
	      "port": 1080,
	      "protocol": "socks",
	      "sniffing": {
		  "enabled": true,
		  "destOverride": ["http", "tls"]
	      },
	      "settings": {
		  "auth": "noauth"
	      }
	  }
      ],
      "outbounds": [
	  {
	      "protocol": "vmess",
	      "settings": {
		  "vnext": [
		      {
			  "address": "serveraddr.com",
			  "port": 16823,  
			  "users": [
			      {
				  "id": "b831381d-6324-4d53-ad4f-8cda48b30811",  
				  "alterId": 64
			      }
			  ]
		      }
		  ]
	      }
	  }
      ]
  }
#+end_src
** 服务器
#+begin_src js 
  {
      "log": {
	  "loglevel": "warning",
	  "access": "/var/log/v2ray/access.log", // 这是 Linux 的路径
	  "error": "/var/log/v2ray/error.log"
      },
      "inbounds": [
	  {
	      "port": 16823,
	      "protocol": "vmess",   
	      "settings": {
		  "clients": [
		      {
			  "id": "b831381d-6324-4d53-ad4f-8cda48b30811",  
			  "alterId": 64
		      }
		  ]
	      }
	  }
      ],
      "outbounds": [
	  {
	      "protocol": "freedom",  
	      "settings": {}
	  }
      ]
  }
#+end_src

log 的选项：
+ loglevel：日志级别，分别有 5 个，本例中设定的是 warning
  + debug：最详细的日志信息，专用于软件调试
  + info：比较详细的日志信息，可以看到 V2Ray 详细的连接信息
  + warning：警告信息。轻微的问题信息，经我观察 warning 级别的信息大多是网络错误。推荐使用 warning
  + error：错误信息。比较严重的错误信息。当出现 error 时该问题足以影响 V2Ray 的正常运行
  + none：空。不记录任何信息
+ access：访问记录输出路径
  + "": 输出至控制台即 stdout
  + "none": 不输出
  + "/path/access.log": 输出至/path/access.log
+ error：错误记录输出路径
  + "": 输出至控制台即 stdout
  + "none": 不输出
  + "/path/error.log": 输出至/path/error.log

#+begin_example
  在 json 中，反斜杠 \ 是转义字符，因此 Windows 操作系统目录的 \ 符号在配置中要使用 \\ 来表示
#+end_example

#+ATTR_HTML: :border 1 :rules all :frame boader
| [[file:routing.org][Next: 路由]] | [[file:log.org][Previous: 日志]] | [[file:basic.org][Home: 基础]] |
