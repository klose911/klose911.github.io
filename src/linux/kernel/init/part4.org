#+TITLE: 内核入口
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../css/main.css" />
#+HTML_LINK_HOME: ./init.html
#+HTML_LINK_UP: ./part3.html
#+OPTIONS: num:nil timestamp:nil ^:nil

#+begin_example
  start_kernel函数是与体系架构无关的通用处理入口函数，尽管在此初始化过程中要无数次的返回arch 文件夹

  如果仔细看看start_kernel函数的内容，将发现此函数涉及内容非常广泛

  在此过程中约包含了86个调用函数，是的，它真的是非常庞大

  但是此部分并不是全部的初始化过程，在当前阶段只看这些就可以了

  此章节以及后续所有在内核初始化过程章节的内容将涉及并详述它
#+end_example

*start_kernel* 函数的主要目的是完成内核初始化并启动 *始祖进程* _1号进程_

#+begin_example
  在始祖进程启动之前start_kernel函数做了很多事情：

  如锁验证器，根据处理器标识ID初始化处理器，开启cgroups子系统，设置每CPU区域环境

  初始化VFS Cache机制，初始化内存管理，rcu,vmalloc,scheduler(调度器)，IRQs(中断向量表),ACPI(中断可编程控制器)以及其它很多子系统

  只有经过这些步骤才看到本章最后一部分祖先进程启动的过程
#+end_example


