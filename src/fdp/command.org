#+TITLE: 命令模式
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/main.css" />
#+OPTIONS: num:nil timestamp:nil ^:nil *:nil
#+HTML_LINK_HOME: fdp.html

命令模式把一个请求或者操作封装到一个对象中。命令模式允许系统使用不同的请求把客户端参数化，对请求排队或者记录请求日志，可以提供命令的撤销和恢复功能

* UML
  #+ATTR_HTML: image :width 40% 
  [[file:pic/command.png]] 
  
* Java
+ 定义Command接口：
  #+BEGIN_SRC java
    public interface Command {
            void exec();
    }
  #+END_SRC

+ 实现命令执行者Receiver：
  #+BEGIN_SRC java
    public class Receiver {
            public void action() {
                    System.out.println("command received!");
            }
    }
  #+END_SRC

+ 实现真正的命令，转发给执行者执行
  #+BEGIN_SRC java
    public class MyCommand implements Command {

            private final Receiver receiver;

            public MyCommand(final Receiver receiver) {
                    this.receiver = receiver;
            }

            @Override
            public void exec() {
                    receiver.action();
            }
    }
  #+END_SRC

+ 实现命令发起者Invoker：
  #+BEGIN_SRC java
    public class Invoker {

            private final Command command;

            public Invoker(final Command command) {
                    this.command = command;
            }

            public void action() {
                    command.exec();
            }
    }
  #+END_SRC

+ 测试代码，命令者发起命令，命令转给执行者，执行者执行命令：
  #+BEGIN_SRC java
    public class CommandTest {
            public static void main(String[] args) {
                    Receiver receiver = new Receiver();
                    Command cmd = new MyCommand(receiver);
                    Invoker invoker = new Invoker(cmd);
                    invoker.action();
            }
    }
  #+END_SRC

+ 测试结果：
  #+BEGIN_SRC sh
    command received!
  #+END_SRC

* Scheme
+ 传入command函数作为参数：
  #+BEGIN_SRC scheme
    (define (invoke command op)
      (command op))
  #+END_SRC

+ 测试：
  #+BEGIN_SRC scheme
    (invoke
     (lambda (op)
       (begin
         (display "command received")
         (newline)
         "command finished")) '())

    ;; => command received
    ;;    command finished
  #+END_SRC

[[file:memento.org][Next：备忘录模式]]

[[file:chain.org][Previous：责任链模式]]

[[file:fdp.org][Home：目录]]
