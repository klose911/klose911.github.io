#+TITLE: 函数式编程实现设计模式
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/main.css" />
#+OPTIONS: num:nil timestamp:nil ^:nil *:nil

从某种意义上说，GOF的设计模式是语言表达能力的缺陷，接下来我会试图用函数式语言来实现这些所谓的设计模式的范例：

1. 创建型
   + [[file:factory.org][工厂方法]]
   + [[file:builder.org][建造器]]
   + [[file:singleton.org][单例]]
   + [[file:protype.org][原型]]
2. 结构型
   + [[file:adapter.org][适配器]]
   + [[file:decorator.org][装饰器]]
   + [[file:proxy.org][代理]]
   + [[file:facade.org][外观]]
   + [[file:bridge.org][桥接]]
   + [[file:flyweight.org][享元]]
3. 行为型
   + [[file:strategy.org][策略]]
   + [[file:template.org][模板]]
   + [[file:observer.org][观察者]]
   + [[file:iterator.org][迭代]]
   + [[file:chain.org][责任链]]
   + [[file:command.org][命令]]
   + [[file:memento.org][备忘录]]
   + [[file:state.org][状态]]
   + [[file:visitor.org][访问者]]
   + [[file:mediator.org][中介者]]
   + [[file:interpreter.org][解释器]]

